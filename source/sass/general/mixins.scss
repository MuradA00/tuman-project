@use 'sass:math';

@mixin dfc {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin dfcs {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin pseudo {
  position: absolute;
  content: '';
}

@mixin bg_position {
  background-repeat: no-repeat;
  background-position: center;
  background-size: 100% 100%;
}

@mixin max-w($media) {
  @media only screen and (max-width: $media) {
    @content;
  }
}

@mixin min-w($media) {
  @media only screen and (min-width: $media) {
    @content;
  }
}

@function rem($pixel) {
  @return math.div($pixel, 16) + rem;
}

@mixin center() {
  top: 50%;
  left: 50%;

  transform: translate(-50%, -50%);
}

@mixin fl($direction, $align, $gap) {
  display: flex;
  flex-direction: $direction;

  grid-gap: $gap;
  @if $align {
    align-items: $align;
  }
}

@mixin hover {
  @media (hover: hover) and (pointer: fine) {
    @content;
  }
}

@mixin tr($transition) {
  @if $transition == 100 {
    transition: 100ms ease;
  }
  @if $transition == 200 {
    transition: 200ms ease;
  }
  @if $transition == 300 {
    transition: 300ms ease;
  }
  @if $transition == 400 {
    transition: 400ms ease;
  }
  @if $transition == 500 {
    transition: 500ms ease;
  }
}

@mixin m($direction, $value) {
  @if $direction == t {
    margin-top: $value;
  }
  @if $direction == b {
    margin-bottom: $value;
  }
  @if $direction == l {
    margin-left: $value;
  }
  @if $direction == r {
    margin-right: $value;
  }
}

@mixin hide-text($line) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
  overflow: hidden;
}

@mixin z-1 {
  z-index: 1;
}
@mixin z-2 {
  z-index: 2;
}
@mixin z-3 {
  z-index: 3;
}
@mixin z-4 {
  z-index: 4;
}
@mixin z-5 {
  z-index: 5;
}

@mixin m-auto {
  margin-left: auto;
  margin-right: auto;
}

@mixin arrow($bg) {
  --arrow-width: .75rem;
  --arrow-height: .5rem;
  --arrow-shape: polygon(50% 100%, 0 0, 100% 0);

  clip-path: var(--arrow-shape);

  width: var(--arrow-width);
  height: var(--arrow-height);

  background-color: $bg;

  @include tr(300);

  display: block;
}

@mixin title-shadow ($clr) {
  text-shadow: 0 0.25rem 0.625rem $clr;
}

@mixin title($width) {
   font-family: var(--ff_o);
   font-size: var(--f-title);
   text-transform: uppercase;
   letter-spacing: var(--ls);

   position: relative;
   @include z-1;

   @include m-auto;

   max-width: $width;

   line-height: 100%;

   text-align: center;

   background: var(--title-gradient);

   -webkit-background-clip: text;
   -webkit-text-fill-color: transparent;

   @include title-shadow(rgba(var(--w-clr),0.25))
}

@mixin grid-cols($columns, $gap) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  grid-gap: $gap;
}

@mixin btn-hover {
  position: relative;

  overflow: hidden;

  @include tr(400);

  &::before {
    @include pseudo;

    width: 100%;
    height: 100%;

    background-image: var(--pink-gradient);

    @include tr(200);

    opacity: 0;
  }

  @include hover {
    &:hover {
      border: 1px solid transparent !important;
      &::before {
        opacity: 1;
      }
    }
  }
}

@mixin btn($py, $px, $bg) {
  padding: $py $px;

  box-shadow: 0rem 0.25rem 1.25rem 0rem rgba(var(--mag-clr), 0.4);

  display: inline-flex;
  text-align: center;
  align-items: center;
  justify-content: center;

  position: relative;

  border-radius: 3rem;

  @include tr(200);

  border: 1px solid rgba(var(--r-clr), 1);

  & > span {
    position: relative;

    @include z-1;
  }

  @if $bg == var(--pink-gradient) {
    border: 1px solid transparent !important;


    &::after,
    &::before {
      @include pseudo;

      width: 100%;
      height: 100%;

      top: 0;
      left: 0;

      @include tr(400);

      border-radius: inherit;
    }
    &::before {
      background-image: var(--dark-btn-clr);

      opacity: 0;
    }
    &::after {
      background-image: var(--pink-gradient);

      opacity: 1;
    }
    @include hover {
      &:hover {
        border: 1px solid rgba(var(--r-clr), 1) !important;

        &::before {
          opacity: 1;
        }
        &::after {
          opacity: 0;
        }
      }
    }
  }

  @if $bg == var(--dark-btn-clr) {
    background-color: rgba(var(--dark-btn-clr), .4);

    @include btn-hover;
  }

  & > span {
    @extend %default-text;

    color: rgba(var(--w-clr), 1);

    position: relative;
  }
}

@mixin card-hover {
  transition: all 200ms ease-in-out;

  @include hover {
    &:hover {
      transform: scale(1.025);

      box-shadow: 0 0 1rem rgba(var(--r-clr), 1);
    }
  }
}
